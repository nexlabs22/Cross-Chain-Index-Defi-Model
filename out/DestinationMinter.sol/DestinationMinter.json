{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintCallSuccessfull",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161064438038061064483398101604081905261002f916100a6565b816001600160a01b03811661005e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d9565b80516001600160a01b03811681146100a157600080fd5b919050565b600080604083850312156100b957600080fd5b6100c28361008a565b91506100d06020840161008a565b90509250929050565b60805161054b6100f9600039600081816090015260fc015261054b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101f3565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c366004610224565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610439565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104e6565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b60006020828403121561020557600080fd5b81356001600160e01b03198116811461021d57600080fd5b9392505050565b60006020828403121561023657600080fd5b813567ffffffffffffffff81111561024d57600080fd5b820160a0818503121561021d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156102985761029861025f565b60405290565b60405160a0810167ffffffffffffffff811182821017156102985761029861025f565b604051601f8201601f1916810167ffffffffffffffff811182821017156102ea576102ea61025f565b604052919050565b803567ffffffffffffffff8116811461030a57600080fd5b919050565b600082601f83011261032057600080fd5b813567ffffffffffffffff81111561033a5761033a61025f565b61034d601f8201601f19166020016102c1565b81815284602083860101111561036257600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261039057600080fd5b8135602067ffffffffffffffff8211156103ac576103ac61025f565b6103ba818360051b016102c1565b82815260069290921b840181019181810190868411156103d957600080fd5b8286015b8481101561042e57604081890312156103f65760008081fd5b6103fe610275565b81356001600160a01b03811681146104165760008081fd5b815281850135858201528352918301916040016103dd565b509695505050505050565b600060a0823603121561044b57600080fd5b61045361029e565b82358152610463602084016102f2565b6020820152604083013567ffffffffffffffff8082111561048357600080fd5b61048f3683870161030f565b604084015260608501359150808211156104a857600080fd5b6104b43683870161030f565b606084015260808501359150808211156104cd57600080fd5b506104da3682860161037f565b60808301525092915050565b6000825160005b8181101561050757602081860181015185830152016104ed565b50600092019182525091905056fea264697066735822122077d4ffd1539babaacb6d7169d8cfdbf65c018f344b21ba66bd296780d771235064736f6c63430008110033",
    "sourceMap": "317:453:7:-:0;;;421:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;482:6;-1:-1:-1;;;;;528:20:25;;524:58;;557:25;;-1:-1:-1;;;557:25:25;;579:1;557:25;;;640:51:67;613:18;;557:25:25;;;;;;;524:58;-1:-1:-1;;;;;588:17:25;;;;;501:3:7::1;:23:::0;;-1:-1:-1;;;;;;501:23:7::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;317:453:7;;14:177:67;93:13;;-1:-1:-1;;;;;135:31:67;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;317:453:7;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046101f3565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c366004610224565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610140576040516335fdcccd60e21b815233600482015260240160405180910390fd5b61015161014c82610439565b610154565b50565b6000805460608301516040516001600160a01b039092169161017691906104e6565b6000604051808303816000865af19150503d80600081146101b3576040519150601f19603f3d011682016040523d82523d6000602084013e6101b8565b606091505b50509050806101c657600080fd5b6040517fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8890600090a15050565b60006020828403121561020557600080fd5b81356001600160e01b03198116811461021d57600080fd5b9392505050565b60006020828403121561023657600080fd5b813567ffffffffffffffff81111561024d57600080fd5b820160a0818503121561021d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156102985761029861025f565b60405290565b60405160a0810167ffffffffffffffff811182821017156102985761029861025f565b604051601f8201601f1916810167ffffffffffffffff811182821017156102ea576102ea61025f565b604052919050565b803567ffffffffffffffff8116811461030a57600080fd5b919050565b600082601f83011261032057600080fd5b813567ffffffffffffffff81111561033a5761033a61025f565b61034d601f8201601f19166020016102c1565b81815284602083860101111561036257600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261039057600080fd5b8135602067ffffffffffffffff8211156103ac576103ac61025f565b6103ba818360051b016102c1565b82815260069290921b840181019181810190868411156103d957600080fd5b8286015b8481101561042e57604081890312156103f65760008081fd5b6103fe610275565b81356001600160a01b03811681146104165760008081fd5b815281850135858201528352918301916040016103dd565b509695505050505050565b600060a0823603121561044b57600080fd5b61045361029e565b82358152610463602084016102f2565b6020820152604083013567ffffffffffffffff8082111561048357600080fd5b61048f3683870161030f565b604084015260608501359150808211156104a857600080fd5b6104b43683870161030f565b606084015260808501359150808211156104cd57600080fd5b506104da3682860161037f565b60808301525092915050565b6000825160005b8181101561050757602081860181015185830152016104ed565b50600092019182525091905056fea264697066735822122077d4ffd1539babaacb6d7169d8cfdbf65c018f344b21ba66bd296780d771235064736f6c63430008110033",
    "sourceMap": "317:453:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:201:25;;;;;;:::i;:::-;;:::i;:::-;;;470:14:67;;463:22;445:41;;433:2;418:18;761:201:25;;;;;;;;1008:130;;;;;;:::i;:::-;;:::i;:::-;;1550:86;;;-1:-1:-1;;;;;1622:8:25;1060:32:67;1042:51;;1030:2;1015:18;1550:86:25;896:203:67;761:201:25;838:4;-1:-1:-1;;;;;;857:56:25;;-1:-1:-1;;;857:56:25;;:100;;-1:-1:-1;;;;;;;917:40:25;;-1:-1:-1;;;917:40:25;857:100;850:107;761:201;-1:-1:-1;;761:201:25:o;1008:130::-;1768:10;-1:-1:-1;;;;;1790:8:25;1768:31;;1764:69;;1808:25;;-1:-1:-1;;;1808:25:25;;1822:10;1808:25;;;1042:51:67;1015:18;;1808:25:25;;;;;;;1764:69;1112:21:::1;;1125:7:::0;1112:21:::1;:::i;:::-;:12;:21::i;:::-;1008:130:::0;:::o;540:227:7:-;646:12;672:3;;682:12;;;;664:31;;-1:-1:-1;;;;;672:3:7;;;;664:31;;682:12;664:31;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:50;;;714:7;706:16;;;;;;738:21;;;;;;;634:133;540:227;:::o;14:286:67:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:67;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:67:o;497:394::-;590:6;643:2;631:9;622:7;618:23;614:32;611:52;;;659:1;656;649:12;611:52;699:9;686:23;732:18;724:6;721:30;718:50;;;764:1;761;754:12;718:50;787:22;;843:3;825:16;;;821:26;818:46;;;860:1;857;850:12;1104:127;1165:10;1160:3;1156:20;1153:1;1146:31;1196:4;1193:1;1186:15;1220:4;1217:1;1210:15;1236:256;1307:4;1301:11;;;1339:17;;1386:18;1371:34;;1407:22;;;1368:62;1365:88;;;1433:18;;:::i;:::-;1469:4;1462:24;1236:256;:::o;1497:252::-;1568:2;1562:9;1610:4;1598:17;;1645:18;1630:34;;1666:22;;;1627:62;1624:88;;;1692:18;;:::i;1754:275::-;1825:2;1819:9;1890:2;1871:13;;-1:-1:-1;;1867:27:67;1855:40;;1925:18;1910:34;;1946:22;;;1907:62;1904:88;;;1972:18;;:::i;:::-;2008:2;2001:22;1754:275;;-1:-1:-1;1754:275:67:o;2034:171::-;2101:20;;2161:18;2150:30;;2140:41;;2130:69;;2195:1;2192;2185:12;2130:69;2034:171;;;:::o;2210:530::-;2252:5;2305:3;2298:4;2290:6;2286:17;2282:27;2272:55;;2323:1;2320;2313:12;2272:55;2359:6;2346:20;2385:18;2381:2;2378:26;2375:52;;;2407:18;;:::i;:::-;2451:55;2494:2;2475:13;;-1:-1:-1;;2471:27:67;2500:4;2467:38;2451:55;:::i;:::-;2531:2;2522:7;2515:19;2577:3;2570:4;2565:2;2557:6;2553:15;2549:26;2546:35;2543:55;;;2594:1;2591;2584:12;2543:55;2659:2;2652:4;2644:6;2640:17;2633:4;2624:7;2620:18;2607:55;2707:1;2682:16;;;2700:4;2678:27;2671:38;;;;2686:7;2210:530;-1:-1:-1;;;2210:530:67:o;2745:1177::-;2813:5;2866:3;2859:4;2851:6;2847:17;2843:27;2833:55;;2884:1;2881;2874:12;2833:55;2920:6;2907:20;2946:4;2969:18;2965:2;2962:26;2959:52;;;2991:18;;:::i;:::-;3031:36;3063:2;3058;3055:1;3051:10;3047:19;3031:36;:::i;:::-;3101:15;;;3187:1;3183:10;;;;3171:23;;3167:32;;;3132:12;;;;3211:15;;;3208:35;;;3239:1;3236;3229:12;3208:35;3275:2;3267:6;3263:15;3287:606;3303:6;3298:3;3295:15;3287:606;;;3381:4;3375:3;3370;3366:13;3362:24;3359:114;;;3427:1;3456:2;3452;3445:14;3359:114;3499:21;;:::i;:::-;3548:17;;-1:-1:-1;;;;;3600:33:67;;3588:46;;3578:144;;3676:1;3705:2;3701;3694:14;3578:144;3735:22;;3806:12;;;3793:26;3777:14;;;3770:50;3833:18;;3871:12;;;;3329:4;3320:14;3287:606;;;-1:-1:-1;3911:5:67;2745:1177;-1:-1:-1;;;;;;2745:1177:67:o;3927:1010::-;4043:9;4102:4;4094:5;4078:14;4074:26;4070:37;4067:57;;;4120:1;4117;4110:12;4067:57;4148:21;;:::i;:::-;4207:5;4194:19;4185:7;4178:36;4248:33;4277:2;4270:5;4266:14;4248:33;:::i;:::-;4243:2;4234:7;4230:16;4223:59;4329:2;4322:5;4318:14;4305:28;4352:18;4393:2;4385:6;4382:14;4379:34;;;4409:1;4406;4399:12;4379:34;4447:52;4484:14;4475:6;4468:5;4464:18;4447:52;:::i;:::-;4442:2;4433:7;4429:16;4422:78;4549:2;4542:5;4538:14;4525:28;4509:44;;4578:2;4568:8;4565:16;4562:36;;;4594:1;4591;4584:12;4562:36;4632:54;4671:14;4660:8;4653:5;4649:20;4632:54;:::i;:::-;4627:2;4618:7;4614:16;4607:80;4736:3;4729:5;4725:15;4712:29;4696:45;;4766:2;4756:8;4753:16;4750:36;;;4782:1;4779;4772:12;4750:36;;4821:80;4886:14;4875:8;4868:5;4864:20;4821:80;:::i;:::-;4815:3;4802:17;;4795:107;-1:-1:-1;4806:7:67;3927:1010;-1:-1:-1;;3927:1010:67:o;4942:412::-;5071:3;5109:6;5103:13;5134:1;5144:129;5158:6;5155:1;5152:13;5144:129;;;5256:4;5240:14;;;5236:25;;5230:32;5217:11;;;5210:53;5173:12;5144:129;;;-1:-1:-1;5328:1:67;5292:16;;5317:13;;;-1:-1:-1;5292:16:67;4942:412;-1:-1:-1;4942:412:67:o",
    "linkReferences": {},
    "immutableReferences": {
      "3251": [
        {
          "start": 144,
          "length": 32
        },
        {
          "start": 252,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": "85572ffb",
    "getRouter()": "b0f479a1",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintCallSuccessfull\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ccip/cross-chain-nft-minter/DestinationMinter.sol\":\"DestinationMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/ccip/cross-chain-nft-minter/DestinationMinter.sol\":{\"keccak256\":\"0x05cad7938ea26103cead824d51879dc447244cb60ef414cd76879aee6478cd45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a81fb2ab5b18557a8c5ab08bd0eada504754cf295208b00f323973cdbe18e707\",\"dweb:/ipfs/QmNUvJqtXfWYpAfiLqo8hHGgd6ewARFhmRWZKdWvyMRX6b\"]},\"contracts/ccip/cross-chain-nft-minter/MyNFT.sol\":{\"keccak256\":\"0x82d487d431ff802a1b35f3430ac724d2e115136f43cfc0bbe0928605808f6bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51f8d8624d8b828f40ed18b3c3f1a83afeffe5f8ba4f046066e086c50e730445\",\"dweb:/ipfs/QmYigyPLQgXXfFx8uCD9FW61MvZhiSFkmrBpWjuCzFSBqy\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0xcf5d0a5cd6ed0f6a9ed721b3e532c0504ed1ba3ab6d3567165876ceb4f23b084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f3b616ed867effae4f3dcf0ebd35cf8af547c1a399cc26507db1bae6c5af66c\",\"dweb:/ipfs/QmWugZNWcRZeLUxdRcJjktrhFfErKBBtuzDwYMhaLWS3p7\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcdf688dc96619a256fdbddce1a6ceff0f6c57963be267148abdcfd57616725e\",\"dweb:/ipfs/QmVEF1ZER2V86L8CcMYTqt1VwQ4Xw2pa12pNZbb99UkqRT\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271\",\"dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRouter"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MintCallSuccessfull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.Any2EVMMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "messageId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes",
                  "name": "sender",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "destTokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ccipReceive"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRouter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "details": "Note ensure you check the msg.sender is the OffRampRouter",
            "params": {
              "message": "CCIP Message"
            }
          },
          "getRouter()": {
            "returns": {
              "_0": "i_router address"
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "The interfaceId to check"
            },
            "returns": {
              "_0": "true if the interfaceId is supported"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
            "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."
          },
          "getRouter()": {
            "notice": "Return the current router"
          },
          "supportsInterface(bytes4)": {
            "notice": "IERC165 supports an interfaceId"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/ccip/cross-chain-nft-minter/DestinationMinter.sol": "DestinationMinter"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ccip/cross-chain-nft-minter/DestinationMinter.sol": {
        "keccak256": "0x05cad7938ea26103cead824d51879dc447244cb60ef414cd76879aee6478cd45",
        "urls": [
          "bzz-raw://a81fb2ab5b18557a8c5ab08bd0eada504754cf295208b00f323973cdbe18e707",
          "dweb:/ipfs/QmNUvJqtXfWYpAfiLqo8hHGgd6ewARFhmRWZKdWvyMRX6b"
        ],
        "license": "MIT"
      },
      "contracts/ccip/cross-chain-nft-minter/MyNFT.sol": {
        "keccak256": "0x82d487d431ff802a1b35f3430ac724d2e115136f43cfc0bbe0928605808f6bb3",
        "urls": [
          "bzz-raw://51f8d8624d8b828f40ed18b3c3f1a83afeffe5f8ba4f046066e086c50e730445",
          "dweb:/ipfs/QmYigyPLQgXXfFx8uCD9FW61MvZhiSFkmrBpWjuCzFSBqy"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol": {
        "keccak256": "0xcf5d0a5cd6ed0f6a9ed721b3e532c0504ed1ba3ab6d3567165876ceb4f23b084",
        "urls": [
          "bzz-raw://5f3b616ed867effae4f3dcf0ebd35cf8af547c1a399cc26507db1bae6c5af66c",
          "dweb:/ipfs/QmWugZNWcRZeLUxdRcJjktrhFfErKBBtuzDwYMhaLWS3p7"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48",
        "urls": [
          "bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33",
          "dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol": {
        "keccak256": "0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523",
        "urls": [
          "bzz-raw://fcdf688dc96619a256fdbddce1a6ceff0f6c57963be267148abdcfd57616725e",
          "dweb:/ipfs/QmVEF1ZER2V86L8CcMYTqt1VwQ4Xw2pa12pNZbb99UkqRT"
        ],
        "license": "MIT"
      },
      "node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol": {
        "keccak256": "0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5",
        "urls": [
          "bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271",
          "dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4",
        "urls": [
          "bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6",
          "dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
        "urls": [
          "bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
          "dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37",
        "urls": [
          "bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f",
          "dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
        "urls": [
          "bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
          "dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/ccip/cross-chain-nft-minter/DestinationMinter.sol",
    "id": 1584,
    "exportedSymbols": {
      "CCIPReceiver": [
        3356
      ],
      "Client": [
        3478
      ],
      "DestinationMinter": [
        1583
      ],
      "MyNFT": [
        1627
      ]
    },
    "nodeType": "SourceUnit",
    "src": "61:709:7",
    "nodes": [
      {
        "id": 1526,
        "nodeType": "PragmaDirective",
        "src": "61:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ]
      },
      {
        "id": 1528,
        "nodeType": "ImportDirective",
        "src": "90:99:7",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1584,
        "sourceUnit": 3357,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1527,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3356,
              "src": "98:12:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1530,
        "nodeType": "ImportDirective",
        "src": "191:84:7",
        "nodes": [],
        "absolutePath": "node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1584,
        "sourceUnit": 3479,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1529,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3478,
              "src": "199:6:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1532,
        "nodeType": "ImportDirective",
        "src": "277:34:7",
        "nodes": [],
        "absolutePath": "contracts/ccip/cross-chain-nft-minter/MyNFT.sol",
        "file": "./MyNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1584,
        "sourceUnit": 1628,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1531,
              "name": "MyNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1627,
              "src": "285:5:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1583,
        "nodeType": "ContractDefinition",
        "src": "317:453:7",
        "nodes": [
          {
            "id": 1537,
            "nodeType": "VariableDeclaration",
            "src": "367:9:7",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "373:3:7",
            "scope": 1583,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MyNFT_$1627",
              "typeString": "contract MyNFT"
            },
            "typeName": {
              "id": 1536,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1535,
                "name": "MyNFT",
                "nameLocations": [
                  "367:5:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1627,
                "src": "367:5:7"
              },
              "referencedDeclaration": 1627,
              "src": "367:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyNFT_$1627",
                "typeString": "contract MyNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1539,
            "nodeType": "EventDefinition",
            "src": "385:28:7",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe88",
            "name": "MintCallSuccessfull",
            "nameLocation": "391:19:7",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:2:7"
            }
          },
          {
            "id": 1556,
            "nodeType": "FunctionDefinition",
            "src": "421:111:7",
            "nodes": [],
            "body": {
              "id": 1555,
              "nodeType": "Block",
              "src": "490:42:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1549,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "501:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyNFT_$1627",
                        "typeString": "contract MyNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1551,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1543,
                          "src": "513:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1550,
                        "name": "MyNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "507:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MyNFT_$1627_$",
                          "typeString": "type(contract MyNFT)"
                        }
                      },
                      "id": 1552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "507:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MyNFT_$1627",
                        "typeString": "contract MyNFT"
                      }
                    },
                    "src": "501:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyNFT_$1627",
                      "typeString": "contract MyNFT"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "501:23:7"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1546,
                    "name": "router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1541,
                    "src": "482:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1547,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1545,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "469:12:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3356,
                  "src": "469:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "469:20:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "441:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "433:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1543,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "457:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "449:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:36:7"
            },
            "returnParameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:7"
            },
            "scope": 1583,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1582,
            "nodeType": "FunctionDefinition",
            "src": "540:227:7",
            "nodes": [],
            "body": {
              "id": 1581,
              "nodeType": "Block",
              "src": "634:133:7",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1564,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1564,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "651:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1581,
                      "src": "646:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1563,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "646:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1573,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1570,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1559,
                          "src": "682:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$3441_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "690:4:7",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3436,
                        "src": "682:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1567,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "672:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyNFT_$1627",
                              "typeString": "contract MyNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MyNFT_$1627",
                              "typeString": "contract MyNFT"
                            }
                          ],
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "664:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "664:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "664:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "677:4:7",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "664:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "645:50:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1575,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "714:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "706:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1577,
                  "nodeType": "ExpressionStatement",
                  "src": "706:16:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1578,
                      "name": "MintCallSuccessfull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "738:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "EmitStatement",
                  "src": "733:26:7"
                }
              ]
            },
            "baseFunctions": [
              3321
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "549:12:7",
            "overrides": {
              "id": 1561,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "625:8:7"
            },
            "parameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "601:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1582,
                  "src": "572:36:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3441_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 1558,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1557,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "572:6:7",
                        "579:14:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3441,
                      "src": "572:21:7"
                    },
                    "referencedDeclaration": 3441,
                    "src": "572:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$3441_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:54:7"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:0:7"
            },
            "scope": 1583,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1533,
              "name": "CCIPReceiver",
              "nameLocations": [
                "347:12:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3356,
              "src": "347:12:7"
            },
            "id": 1534,
            "nodeType": "InheritanceSpecifier",
            "src": "347:12:7"
          }
        ],
        "canonicalName": "DestinationMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1583,
          3356,
          3600,
          3369
        ],
        "name": "DestinationMinter",
        "nameLocation": "326:17:7",
        "scope": 1584,
        "usedErrors": [
          3337
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 7
}